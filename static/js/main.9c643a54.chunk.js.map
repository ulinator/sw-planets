{"version":3,"sources":["components/PlanetsData/PlanetsData.module.css","components/AddMovie/AddMovie.module.css","components/UI/ExpandableTab/ExpandableTab.module.css","components/UI/PlanetTag/PlanetTag.module.css","assets/LOGO.svg","components/MoviesList/MoviesList.module.css","assets/LOADER.svg","components/UI/Loader/Loader.module.css","assets/ARROW_OPEN.svg","assets/ARROW_CLOSE.svg","assets/CLOSE.svg","components/UI/Header/Header.js","components/UI/Loader/Loader.js","helpers/helpers.js","components/PlanetsData/PlanetsData.js","components/UI/ExpandableTab/ExpandableTab.js","context/MoviesContext.js","components/MoviesList/MoviesList.js","components/UI/PlanetTag/PlanetTag.js","components/AddMovie/AddMovie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","src","logo","alt","Loader","className","styles","loader","fetchData","url","fetch","then","result","json","data","API","fetchFilms","a","searchPlanets","query","planets","compareValues","key","order","b","hasOwnProperty","varA","isNaN","parseInt","varB","comparison","validateTitle","title","validatedCapitalLetter","test","validatedLength","length","validatePlanets","sortOrder","PlanetsData","state","planetsData","sortedData","sortingOrder","loading","isDesktop","fetchMoviePlanetsData","props","setState","Promise","all","map","planetURL","match","replace","planetData","sortData","sort","toggleSortingOrder","checkWidthAndSwitchView","window","matchMedia","matches","addEventListener","this","removeEventListener","simplifiedTable","planet","planetsDataSimple","planetName","name","rotation_period","orbital_period","diameter","climate","surface_water","population","fullTable","planetsDataTable","grid","onClick","sortArrows","Component","ExpandableTab","isExpanded","toggleExpanded","arrowImg","arrow_close","arrow_open","expandableTab","expanded","expandableHeader","toggleImage","expandedSection","children","MoviesContext","React","createContext","movies","addMovie","MoviesList","films","error","getMovies","catch","err","results","Consumer","context","concat","film","PlanetTag","planetTag","type","closeButton","remove","close","AddMovie","movieTitle","searchQuery","selectedPlanets","searchResults","titleValidated","planetValidated","handleTitleChange","event","value","target","handlePlanetAdd","find","newPlanets","handleSearchValue","handleSubmit","planetsValidated","newMovie","getOptions","removeTag","planetNameToRemove","filteredPlanets","filter","planetTags","formWrapper","formLabel","input","placeholder","onChange","validateInfo","options","resolve","reject","search","printOptions","button","disabled","App","movie","updatedMovies","localStorage","setItem","JSON","stringify","getMoviesFromLocalStorage","localStorageObject","getItem","userSavedMovies","parse","Provider","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,iBAAmB,sCAAsC,WAAa,gCAAgC,kBAAoB,yC,sBCA1ND,EAAOC,QAAU,CAAC,YAAc,8BAA8B,OAAS,yBAAyB,UAAY,4BAA4B,WAAa,6BAA6B,MAAQ,wBAAwB,aAAe,iC,gBCAjOD,EAAOC,QAAU,CAAC,gBAAkB,uCAAuC,MAAQ,6BAA6B,YAAc,mCAAmC,cAAgB,qCAAqC,SAAW,gCAAgC,iBAAmB,0C,kBCApRD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,iC,kBCDzED,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,WAAa,iC,gBCD/BD,EAAOC,QAAU,IAA0B,oC,gBCC3CD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAgB,gC,gBCDlED,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,2NCW5BC,MARf,WACE,OACE,gCACE,yBAAKC,IAAKC,IAAMC,IAAI,iC,0ECMXC,MARf,WACE,OACE,gCACE,yBAAKC,UAAWC,IAAOC,OAAQN,IAAKM,IAAQJ,IAAI,iBCPzCK,EAAY,SAACC,GACxB,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GACF,OAAOA,MAITC,EAAM,yBAECC,EAAU,uCAAG,4BAAAC,EAAA,sEACLT,EAAUO,EAAM,UADX,cAClBD,EADkB,yBAEjBA,GAFiB,2CAAH,qDAKVI,EAAa,uCAAG,WAAOC,GAAP,eAAAF,EAAA,sEACLT,EAAUO,EAAG,0BAAsBI,IAD9B,cACrBC,EADqB,yBAEpBA,GAFoB,2CAAH,sDAKbC,EAAgB,SAACC,GAAwB,IAAnBC,EAAkB,uDAAV,MACzC,OAAO,SAACN,EAAGO,GACT,IAAKP,EAAEQ,eAAeH,KAASE,EAAEC,eAAeH,GAE9C,OAAO,EAGT,IAAMI,EAAOC,MAAMV,EAAEK,IAAQL,EAAEK,GAAOM,SAASX,EAAEK,IAC3CO,EAAOF,MAAMH,EAAEF,IAAQE,EAAEF,GAAOM,SAASJ,EAAEF,IAE7CQ,EAAa,EAQjB,OANIJ,EAAOG,EACTC,EAAa,EACJJ,EAAOG,IAChBC,GAAc,GAIH,SAAVP,GAAmC,EAAdO,EAAmBA,IAKlCC,EAAgB,SAACC,GAC5B,IAAMC,IAAyB,QAAQC,KAAKF,EAAM,IAC5CG,EAAkBH,EAAMI,OAAS,EAEvC,OAAOH,GAA0BE,GAGtBE,EAAkB,SAACjB,GAC9B,OAAOA,EAAQgB,OAAS,G,gBC/CpBE,EACC,MADDA,EAEE,OAyKOC,E,4MArKbC,MAAQ,CACNC,YAAa,KACbC,WAAY,KACZC,aAAcL,EACdM,SAAS,EACTC,WAAW,G,EAGbC,sB,sBAAwB,8BAAA7B,EAAA,6DACdG,EAAY,EAAK2B,MAAjB3B,QAER,EAAK4B,SAAS,CACZJ,SAAS,IAJW,SAOIK,QAAQC,IAChC9B,EAAQ+B,IAAR,uCACE,WAAOC,GAAP,eAAAnC,EAAA,6DACMmC,EAAUC,MAAM,cAClBD,EAAYA,EAAUE,QAAQ,UAAU,aAF5C,SAI2B9C,EAAU4C,GAJrC,cAIQG,EAJR,yBAKSA,GALT,2CADF,wDARoB,OAOhBd,EAPgB,OAmBtB,EAAKO,SAAS,CACZP,YAAaA,EACbG,SAAS,IArBW,2C,EAyBxBY,SAAW,SAAClC,GACV,EAAK0B,UAAS,SAACR,GAIb,MAAO,CACLE,WAJiB,YAAIF,EAAME,YAAYe,KAAKpC,EAAcC,EAAKkB,EAAMG,eAKrEA,aAJsBH,EAAMG,eAAiBL,EAAgBA,EAAiBA,O,EASpFoB,mBAAqB,WACnB,EAAKV,UAAS,SAACR,GAGb,MAAO,CACLG,aAHsBH,EAAMG,eAAiBL,EAAgBA,EAAiBA,O,EAQpFqB,wBAA0B,WACxB,IACId,IADgBe,OAAOC,WAAW,sBACVC,QAE5B,EAAKd,SAAS,CACZH,UAAWA,K,mLAKbe,OAAOG,iBAAiB,SAAUC,KAAKL,yBACvCK,KAAKL,0B,SAECK,KAAKlB,wB,OAEXkB,KAAKhB,UAAS,SAACR,GACb,MAAO,CACLE,WAAW,YAAKF,EAAMC,iB,mJAM1BmB,OAAOK,oBAAoB,SAAUD,KAAKL,2B,+BAGjC,IAAD,EACmCK,KAAKxB,MAAxCI,EADA,EACAA,QAASF,EADT,EACSA,WAAYG,EADrB,EACqBA,UACrBW,EAAaQ,KAAbR,SAER,GAAIZ,EACF,OAAO,kBAAC,EAAD,MAGT,IAAMsB,EACJxB,GACAA,EAAWS,KAAI,SAACgB,GAAD,OACb,2BAAO9D,UAAWC,IAAO8D,kBAAmB9C,IAAK6C,EAAO1D,KACtD,+BACE,4BACE,2CACA,wBAAIJ,UAAWC,IAAO+D,YAAaF,EAAOG,OAE5C,4BACE,+CACA,4BAAKH,EAAOI,kBAEd,4BACE,8CACA,4BAAKJ,EAAOK,iBAEd,4BACE,wCACA,4BAAKL,EAAOM,WAEd,4BACE,uCACA,4BAAKN,EAAOO,UAEd,4BACE,6CACA,4BAAKP,EAAOQ,gBAEd,4BACE,0CACA,4BAAKR,EAAOS,kBAMhBC,EACJ,2BAAOxE,UAAWC,IAAOwE,kBACrB,+BACE,wBAAIzE,UAAWC,IAAOyE,MACpB,wBAAI1E,UAAWC,IAAO+D,WAAYW,QAAS,kBAAMxB,EAAS,UAA1D,cAA8E,0BAAMnD,UAAWC,IAAO2E,cACtG,wBAAID,QAAS,kBAAMxB,EAAS,qBAA5B,kBAA+D,0BAAMnD,UAAWC,IAAO2E,cACvF,wBAAID,QAAS,kBAAMxB,EAAS,oBAA5B,iBAA6D,0BAAMnD,UAAWC,IAAO2E,cACrF,wBAAID,QAAS,kBAAMxB,EAAS,cAA5B,WAAiD,0BAAMnD,UAAWC,IAAO2E,cACzE,wBAAID,QAAS,kBAAMxB,EAAS,aAA5B,UAA+C,0BAAMnD,UAAWC,IAAO2E,cACvE,wBAAID,QAAS,kBAAMxB,EAAS,mBAA5B,gBAA2D,0BAAMnD,UAAWC,IAAO2E,cACnF,wBAAID,QAAS,kBAAMxB,EAAS,gBAA5B,aAAqD,0BAAMnD,UAAWC,IAAO2E,gBAIjF,+BACEvC,GACAA,EAAWS,KAAI,SAACgB,GAAD,OACb,wBAAI7C,IAAK6C,EAAO1D,IAAKJ,UAAWC,IAAOyE,MACrC,wBAAI1E,UAAWC,IAAO+D,YAAaF,EAAOG,MAC1C,4BAAKH,EAAOI,iBACZ,4BAAKJ,EAAOK,gBACZ,4BAAKL,EAAOM,UACZ,4BAAKN,EAAOO,SACZ,4BAAKP,EAAOQ,eACZ,4BAAKR,EAAOS,kBAOxB,OACE,kBAAC,WAAD,KACI/B,EAAYgC,EAAWX,O,GAhKPgB,a,mDC4BXC,E,4MAhCb3C,MAAQ,CACN4C,YAAY,G,EAGdC,eAAiB,WACf,EAAKrC,UAAS,SAACR,GACb,MAAO,CAAE4C,YAAa5C,EAAM4C,gB,uDAItB,IACAA,EAAepB,KAAKxB,MAApB4C,WACFE,EAAWF,EAAaG,IAAcC,IAE5C,OACE,yBAAKnF,UAAS,UAAKC,IAAOmF,cAAZ,YAA6BL,EAAa9E,IAAOoF,SAAW,KACxE,yBAAKrF,UAAWC,IAAOqF,iBAAkBX,QAAShB,KAAKqB,gBACrD,wBAAIhF,UAAWC,IAAO0B,OAAQgC,KAAKjB,MAAMf,OAEzC,yBAAK3B,UAAWC,IAAOsF,YAAa3F,IAAKqF,EAAUnF,IAAI,qBAGvDiF,GACA,6BAAS/E,UAAWC,IAAOuF,iBACxB7B,KAAKjB,MAAM+C,e,GAzBIZ,aCEba,EALOC,IAAMC,cAAc,CACxCC,OAAQ,GACRC,SAAU,eCwDGC,E,4MAnDb5D,MAAQ,CACN6D,MAAO,KACPC,MAAO,M,EAGTC,U,sBAAY,4BAAAtF,EAAA,sEACSD,IAChBwF,OAAM,SAAAC,GACL,EAAKzD,SAAS,CACZsD,MAAOG,OAJH,OACJ3F,EADI,OAQV,EAAKkC,SAAS,CACZqD,MAAOvF,EAAK4F,UATJ,2C,4LAcJ1C,KAAKuC,Y,qIAGH,IAAD,EACkBvC,KAAKxB,MAAtB6D,EADD,EACCA,MAAOC,EADR,EACQA,MAEf,OACE,6BAASjG,UAAWC,IAAO8F,YAExBE,GACC,uBAAGjG,UAAU,SAAb,UAA8BiG,IAG9BD,GACA,kBAAC,EAAD,MAGF,kBAAC,EAAcM,SAAf,MACG,SAACC,GAAD,OACCP,GACEA,EAAMQ,OAAOD,EAAQV,QAAQ/C,KAAI,SAAC2D,GAAD,OAC/B,kBAAC,EAAD,CAAexF,IAAKwF,EAAK9E,MAAOA,MAAO8E,EAAK9E,OAC1C,kBAAC,EAAD,CAAkBZ,QAAS0F,EAAK1F,sB,GA1CzB8D,a,0CCKV6B,MATf,SAAmBhE,GACjB,OACE,yBAAK1C,UAAWC,IAAO0G,WACrB,2BAAIjE,EAAM+C,UACV,4BAAQmB,KAAK,SAAS5G,UAAWC,IAAO4G,YAAalC,QAASjC,EAAMoE,QAAQ,yBAAKlH,IAAKmH,IAAOjH,IAAI,a,iBCiKxFkH,G,4MAhKb7E,MAAQ,CACN8E,WAAY,GACZC,YAAa,GACbC,gBAAiB,GACjBC,cAAe,KACfC,gBAAgB,EAChBC,iBAAiB,G,EAGnBC,kBAAoB,SAACC,GAAW,IACtBC,EAAUD,EAAME,OAAhBD,MAER,EAAK9E,SAAS,CACZsE,WAAYQ,EACZJ,eAAgB3F,EAAc+F,M,EAIlCE,gBAAkB,SAACF,EAAOhH,GAAU,IAC1BwD,EAASxD,EAATwD,KACa,EAAK9B,MAAMgF,gBAAgBS,MAAK,SAAC9D,GAAD,OAAYA,EAAOG,OAASA,MAMjF,EAAKtB,UAAS,SAACR,GACb,IAAM0F,EAAU,sBAAO1F,EAAMgF,iBAAb,CAA8B,CAAElD,OAAMwD,WAEtD,MAAO,CACLN,gBAAiBU,EACjBX,YAAa,GACbI,gBAAiBtF,EAAgB6F,Q,EAKvCC,kBAAoB,SAACN,GACnB,EAAK7E,SAAS,CACZuE,YAAaM,EAAME,OAAOD,S,EAI9BM,aAAe,SAACxB,GAAa,IAAD,EACc,EAAKpE,MAArC8E,EADkB,EAClBA,WAAYE,EADM,EACNA,gBACdE,EAAiB3F,EAAcuF,GAC/Be,EAAmBhG,EAAgBmF,GAczC,GAZKE,GACH,EAAK1E,SAAS,CACZ0E,gBAAgB,IAIfW,GACH,EAAKrF,SAAS,CACZ2E,iBAAiB,IAIfD,GAAkBW,EAAxB,CAIA,IACMC,EAAW,CAAEtG,MAAOsF,EAAYlG,QADlBoG,EAAgBrE,KAAI,SAACgB,GAAD,OAAYA,EAAO2D,UAG3DlB,EAAQT,SAASmC,GAEjB,EAAKtF,SAAS,CACZsE,WAAY,GACZE,gBAAiB,O,EAIrBe,W,sBAAa,8BAAAtH,EAAA,6DACHsG,EAAgB,EAAK/E,MAArB+E,YADG,SAEiBrG,EAAcqG,GAF/B,OAELE,EAFK,OAIX,EAAKzE,SAAS,CACZyE,cAAeA,IALN,2C,EASbe,UAAY,SAACC,GACX,EAAKzF,UAAS,SAACR,GACb,IAAMkG,EAAkBlG,EAAMgF,gBAAgBmB,QAAO,SAACxE,GACpD,OAAOA,EAAOG,OAASmE,KAGzB,MAAO,CACLjB,gBAAiBkB,EACjBL,iBAAkBhG,EAAgBqG,Q,uDAK7B,IAAD,SACiE1E,KAAKxB,MAAtEgF,EADA,EACAA,gBAAiBF,EADjB,EACiBA,WAAYK,EAD7B,EAC6BA,gBAAiBD,EAD9C,EAC8CA,eAC9CE,EAAqD5D,KAArD4D,kBAAmBQ,EAAkCpE,KAAlCoE,aAAcJ,EAAoBhE,KAApBgE,gBAEnCY,EAAapB,EAAgBrE,KAAI,SAACgB,GAAD,OAAY,kBAAC,EAAD,CAAW7C,IAAK6C,EAAOG,KAAM6C,OAAQ,kBAAM,EAAKqB,UAAUrE,EAAOG,QAAQH,EAAOG,SAEnI,OACE,kBAAC,EAAD,CAAetC,MAAO,aACpB,0BAAM3B,UAAWC,IAAOuI,aACtB,2BAAOxI,UAAWC,IAAOwI,WAAzB,eACE,2BAAOxE,KAAK,QACVjE,UAAWC,IAAOyI,MAClB9B,KAAK,OACL+B,YAAY,wBACZlB,MAAOR,EACP2B,SAAUrB,MAEXF,GACD,uBAAGrH,UAAWC,IAAO4I,cAArB,8EAEAN,GACA,yBAAKvI,UAAWC,IAAOsI,YACpBA,GAIL,2BAAOvI,UAAWC,IAAOwI,WAAzB,cACE,kBAAC,IAAD,CACEG,SAAUjB,EACVmB,QAAS,GACTZ,WAAY,SAACpH,GACX,OAAO,IAAI8B,SAAQ,SAACmG,EAASC,GAC3BnI,EAAcC,GACXR,MAAK,SAACG,GACLsI,EAAQtI,EAAK4F,QAAQvD,KAAI,SAACgB,GAAD,MAAa,CAAE2D,MAAO3D,EAAO1D,IAAK6D,KAAMH,EAAOG,iBAIhFwD,MAAO,GACPwB,QAAM,EACNN,YAAY,wCACZO,aAAa,aAGd5B,GACD,uBAAGtH,UAAWC,IAAO4I,cAArB,4BAEF,kBAAC,EAAcvC,SAAf,MACG,SAACC,GAAD,OACC,4BAAQvG,UAAWC,IAAOkJ,OACxBvC,KAAK,SACLwC,WAAY/B,GAAkBC,GAC9B3C,QAAS,kBAAMoD,EAAaxB,KAH9B,sB,GAnJS1B,aCkDRwE,G,4MAlDblH,MAAQ,CACN0D,OAAQ,I,EAGVC,SAAW,SAACwD,GACV,EAAK3G,UAAS,SAACR,GACb,IAAMoH,EAAa,sBAAOpH,EAAM0D,QAAb,CAAqByD,IAGxC,OADAE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUJ,IAChD,CACL1D,OAAQ0D,O,EAKdK,0BAA4B,WAC1B,IAAMC,EAAqBL,aAAaM,QAAQ,mBAC1CC,EAAkBL,KAAKM,MAAMH,GAE/BE,GACF,EAAKpH,SAAS,CACZkD,OAAQkE,K,kEAMZpG,KAAKiG,8B,+BAIL,OACE,yBAAK5J,UAAU,OACb,kBAAC,EAAciK,SAAf,CAAwBxC,MAAO,CAC7B5B,OAAQlC,KAAKxB,MAAM0D,OACnBC,SAAUnC,KAAKmC,WAEf,yBAAK9F,UAAU,mBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,sBACb,kBAAC,GAAD,a,GA3CM6E,aCKEqF,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAASpH,MACvB,2DCZNqH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtK,MAAK,SAAAuK,GACJA,EAAaC,gBAEd3E,OAAM,SAAAF,GACL8E,QAAQ9E,MAAMA,EAAM+E,c","file":"static/js/main.9c643a54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortArrows\":\"PlanetsData_sortArrows__1zvKd\",\"grid\":\"PlanetsData_grid__1LqjE\",\"planetsDataTable\":\"PlanetsData_planetsDataTable__wyX_B\",\"planetName\":\"PlanetsData_planetName__3ZZcx\",\"planetsDataSimple\":\"PlanetsData_planetsDataSimple__1-uOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"AddMovie_formWrapper__2hQa_\",\"button\":\"AddMovie_button__1QhSv\",\"formLabel\":\"AddMovie_formLabel__3mIC0\",\"planetTags\":\"AddMovie_planetTags__2x0QZ\",\"input\":\"AddMovie_input__3HEwk\",\"validateInfo\":\"AddMovie_validateInfo__BrrWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandedSection\":\"ExpandableTab_expandedSection__9WzC0\",\"title\":\"ExpandableTab_title__zJwmd\",\"toggleImage\":\"ExpandableTab_toggleImage__245Ee\",\"expandableTab\":\"ExpandableTab_expandableTab__Pfadp\",\"expanded\":\"ExpandableTab_expanded__1CUgK\",\"expandableHeader\":\"ExpandableTab_expandableHeader__2HOcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planetTag\":\"PlanetTag_planetTag__2ZkgH\",\"closeButton\":\"PlanetTag_closeButton__3vX1M\"};","module.exports = __webpack_public_path__ + \"static/media/LOGO.79977f05.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesList\":\"MoviesList_moviesList__2gALa\"};","module.exports = __webpack_public_path__ + \"static/media/LOADER.8bbd21d3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2AuLb\",\"rotate-loader\":\"Loader_rotate-loader__zm1J7\"};","module.exports = __webpack_public_path__ + \"static/media/ARROW_OPEN.da45c4c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ARROW_CLOSE.81e948ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/CLOSE.4b823e92.svg\";","import React from 'react';\nimport logo from '../../../assets/LOGO.svg';\n\nfunction Header() {\n  return (\n    <figure>\n      <img src={logo} alt=\"Front-end recruitment task\" />\n    </figure>\n  );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport loader from '../../../assets/LOADER.svg';\r\nimport styles  from \"./Loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <figure>\r\n      <img className={styles.loader} src={loader} alt=\"Loading...\" />\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default Loader;","export const fetchData = (url) => {\r\n  return fetch(url)\r\n    .then(result => result.json())\r\n    .then(data => {\r\n        return data;\r\n    });\r\n};\r\n\r\nconst API = 'https://swapi.dev/api/'\r\n\r\nexport const fetchFilms = async () => {\r\n  const data = await fetchData(API + 'films/')\r\n  return data;\r\n};\r\n\r\nexport const searchPlanets = async (query) => {\r\n  const planets = await fetchData(API + `planets/?search=${query}`)\r\n  return planets;\r\n};\r\n\r\nexport const compareValues = (key, order = 'asc') => {\r\n  return (a, b) => {\r\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n      // property doesn't exist on either object\r\n      return 0;\r\n    };\r\n\r\n    const varA = isNaN(a[key]) ? a[key] : parseInt(a[key]);\r\n    const varB = isNaN(b[key]) ? b[key] : parseInt(b[key]);\r\n\r\n    let comparison = 0;\r\n\r\n    if (varA > varB) {\r\n      comparison = 1;\r\n    } else if (varA < varB) {\r\n      comparison = -1;\r\n    }\r\n\r\n    return (\r\n      (order === 'desc') ? (comparison * -1) : comparison\r\n    );\r\n  };\r\n};\r\n\r\nexport const validateTitle = (title) => {\r\n  const validatedCapitalLetter = /[A-Z]/.test(title[0]) ? true : false;\r\n  const validatedLength = title.length > 2 ? true : false;\r\n\r\n  return validatedCapitalLetter && validatedLength;\r\n};\r\n\r\nexport const validatePlanets = (planets) => {\r\n  return planets.length > 0;\r\n};","import React, { Component, Fragment } from 'react';\r\nimport Loader from '../UI/Loader/Loader.js';\r\nimport { fetchData, compareValues } from '../../helpers/helpers.js';\r\nimport styles  from \"./PlanetsData.module.css\";\r\n\r\nconst sortOrder = {\r\n  ASC: 'asc',\r\n  DESC: 'desc'\r\n};\r\n\r\nclass PlanetsData extends Component {\r\n  state = {\r\n    planetsData: null,\r\n    sortedData: null,\r\n    sortingOrder: sortOrder.ASC,\r\n    loading: true,\r\n    isDesktop: false,\r\n  };\r\n\r\n  fetchMoviePlanetsData = async () => {\r\n    const { planets } = this.props;\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    const planetsData = await Promise.all(\r\n      planets.map(\r\n        async (planetURL) => {\r\n          if (planetURL.match('^http://')){\r\n            planetURL = planetURL.replace(\"http://\",\"https://\")\r\n          }\r\n          const planetData = await fetchData(planetURL);\r\n          return planetData;\r\n        }\r\n      )\r\n    );\r\n\r\n    this.setState({\r\n      planetsData: planetsData,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  sortData = (key) => {\r\n    this.setState((state) => {\r\n      const sortedData = [...state.sortedData].sort(compareValues(key, state.sortingOrder));\r\n      const newSortingOrder = state.sortingOrder === sortOrder.ASC ? sortOrder.DESC : sortOrder.ASC;\r\n\r\n      return {\r\n        sortedData: sortedData,\r\n        sortingOrder: newSortingOrder,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleSortingOrder = () => {\r\n    this.setState((state) => {\r\n      const newSortingOrder = state.sortingOrder === sortOrder.ASC ? sortOrder.DESC : sortOrder.ASC;\r\n\r\n      return {\r\n        sortingOrder: newSortingOrder,\r\n      };\r\n    });\r\n  };\r\n\r\n  checkWidthAndSwitchView = () => {\r\n    const desktopView = window.matchMedia(\"(min-width: 600px)\");\r\n    let isDesktop = desktopView.matches ? true : false;\r\n\r\n    this.setState({\r\n      isDesktop: isDesktop,\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    window.addEventListener(\"resize\", this.checkWidthAndSwitchView);\r\n    this.checkWidthAndSwitchView();\r\n\r\n    await this.fetchMoviePlanetsData();\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        sortedData: [...state.planetsData]\r\n      };\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.checkWidthAndSwitchView);\r\n  };\r\n\r\n  render () {\r\n    const { loading, sortedData, isDesktop } = this.state;\r\n    const { sortData } = this;\r\n\r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n\r\n    const simplifiedTable =\r\n      sortedData &&\r\n      sortedData.map((planet) =>\r\n        <table className={styles.planetsDataSimple} key={planet.url}>\r\n          <tbody>\r\n            <tr>\r\n              <th>Planet Name</th>\r\n              <td className={styles.planetName}>{planet.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Rotation period</th>\r\n              <td>{planet.rotation_period}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Orbital period</th>\r\n              <td>{planet.orbital_period}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Diameter</th>\r\n              <td>{planet.diameter}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Climate</th>\r\n              <td>{planet.climate}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Surface water</th>\r\n              <td>{planet.surface_water}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Population</th>\r\n              <td>{planet.population}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n\r\n    const fullTable =\r\n      <table className={styles.planetsDataTable}>\r\n          <thead>\r\n            <tr className={styles.grid}>\r\n              <th className={styles.planetName} onClick={() => sortData('name')}>Planet Name<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('rotation_period')}>Rotation period<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('orbital_period')}>Orbital period<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('diameter')}>Diameter<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('climate')}>Climate<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('surface_water')}>Surface water<span className={styles.sortArrows}></span></th>\r\n              <th onClick={() => sortData('population')}>Population<span className={styles.sortArrows}></span></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n          { sortedData &&\r\n            sortedData.map((planet) =>\r\n              <tr key={planet.url} className={styles.grid}>\r\n                <td className={styles.planetName}>{planet.name}</td>\r\n                <td>{planet.rotation_period}</td>\r\n                <td>{planet.orbital_period}</td>\r\n                <td>{planet.diameter}</td>\r\n                <td>{planet.climate}</td>\r\n                <td>{planet.surface_water}</td>\r\n                <td>{planet.population}</td>\r\n              </tr>\r\n            )\r\n          }\r\n          </tbody>\r\n        </table>;\r\n\r\n    return (\r\n      <Fragment>\r\n        { isDesktop ? fullTable: simplifiedTable }\r\n      </Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default PlanetsData;","import React, { Component } from 'react';\r\nimport arrow_open from '../../../assets/ARROW_OPEN.svg';\r\nimport arrow_close from '../../../assets/ARROW_CLOSE.svg';\r\nimport styles  from \"./ExpandableTab.module.css\";\r\n\r\nclass ExpandableTab extends Component {\r\n  state = {\r\n    isExpanded: false,\r\n  };\r\n\r\n  toggleExpanded = () => {\r\n    this.setState((state) => {\r\n      return { isExpanded: !state.isExpanded };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isExpanded } = this.state;\r\n    const arrowImg = isExpanded ? arrow_close : arrow_open;\r\n\r\n    return (\r\n      <div className={`${styles.expandableTab} ${isExpanded ? styles.expanded : \"\"}`}>\r\n        <div className={styles.expandableHeader} onClick={this.toggleExpanded}>\r\n          <h2 className={styles.title}>{this.props.title}</h2>\r\n\r\n          <img className={styles.toggleImage} src={arrowImg} alt=\"Toggle expanded\" />\r\n        </div>\r\n\r\n        { isExpanded &&\r\n          <section className={styles.expandedSection}>\r\n            {this.props.children}\r\n          </section>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ExpandableTab;\r\n","import React from 'react';\r\n\r\nconst MoviesContext = React.createContext({\r\n  movies: [],\r\n  addMovie: () => {}\r\n});\r\n\r\nexport default MoviesContext;","import React, { Component } from 'react';\r\nimport styles from './MoviesList.module.css';\r\nimport Loader from '../UI/Loader/Loader.js';\r\nimport PlanetsDataTable from '../PlanetsData/PlanetsData.js';\r\nimport ExpandableTab from '../UI/ExpandableTab/ExpandableTab.js';\r\nimport { fetchFilms } from '../../helpers/helpers.js';\r\nimport MoviesContext from '../../context/MoviesContext.js';\r\n\r\nclass MoviesList extends Component {\r\n  state = {\r\n    films: null,\r\n    error: null,\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const data = await fetchFilms()\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      films: data.results\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getMovies();\r\n  };\r\n\r\n  render() {\r\n    const { films, error } = this.state;\r\n\r\n    return (\r\n      <section className={styles.MoviesList}>\r\n\r\n        {error &&\r\n          <p className=\"error\">Error: { error }</p>\r\n        }\r\n\r\n        {!films &&\r\n          <Loader />\r\n        }\r\n\r\n        <MoviesContext.Consumer>\r\n          {(context) =>\r\n            films &&\r\n              films.concat(context.movies).map((film) =>\r\n                <ExpandableTab key={film.title} title={film.title}>\r\n                  <PlanetsDataTable planets={film.planets} />\r\n                </ExpandableTab>\r\n              )\r\n          }\r\n        </MoviesContext.Consumer>\r\n      </section>\r\n    );\r\n  };\r\n};\r\n\r\nexport default MoviesList;","import React from 'react';\nimport close from '../../../assets/CLOSE.svg';\nimport styles  from \"./PlanetTag.module.css\";\n\nfunction PlanetTag(props) {\n  return (\n    <div className={styles.planetTag}>\n      <p>{props.children}</p>\n      <button type=\"button\" className={styles.closeButton} onClick={props.remove}><img src={close} alt=\"close\" /></button>\n    </div>\n  );\n};\n\nexport default PlanetTag;\n","import React, { Component } from 'react';\r\nimport { searchPlanets, validateTitle, validatePlanets } from '../../helpers/helpers.js';\r\nimport ExpandableTab from '../UI/ExpandableTab/ExpandableTab.js';\r\nimport SelectSearch from 'react-select-search';\r\nimport PlanetTag from '../UI/PlanetTag/PlanetTag.js';\r\nimport MoviesContext from '../../context/MoviesContext.js';\r\nimport styles  from \"./AddMovie.module.css\";\r\n\r\nclass AddMovie extends Component {\r\n  state = {\r\n    movieTitle: '',\r\n    searchQuery: '',\r\n    selectedPlanets: [],\r\n    searchResults: null,\r\n    titleValidated: true,\r\n    planetValidated: true,\r\n  };\r\n\r\n  handleTitleChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.setState({\r\n      movieTitle: value,\r\n      titleValidated: validateTitle(value),\r\n    });\r\n  };\r\n\r\n  handlePlanetAdd = (value, data) => {\r\n    const { name } = data;\r\n    const hasDuplicate = this.state.selectedPlanets.find((planet) => planet.name === name);\r\n\r\n    if (hasDuplicate) {\r\n      return\r\n    }\r\n\r\n    this.setState((state) => {\r\n      const newPlanets = [...state.selectedPlanets, { name, value }];\r\n\r\n      return {\r\n        selectedPlanets: newPlanets,\r\n        searchQuery: '',\r\n        planetValidated: validatePlanets(newPlanets),\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSearchValue = (event) => {\r\n    this.setState({\r\n      searchQuery: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (context) => {\r\n    const { movieTitle, selectedPlanets } = this.state;\r\n    const titleValidated = validateTitle(movieTitle);\r\n    const planetsValidated = validatePlanets(selectedPlanets);\r\n\r\n    if (!titleValidated) {\r\n      this.setState({\r\n        titleValidated: false,\r\n      });\r\n    }\r\n\r\n    if (!planetsValidated) {\r\n      this.setState({\r\n        planetValidated: false,\r\n      });\r\n    }\r\n\r\n    if (!(titleValidated && planetsValidated)) {\r\n      return\r\n    }\r\n\r\n    const planetsUrls = selectedPlanets.map((planet) => planet.value);\r\n    const newMovie = { title: movieTitle, planets: planetsUrls }\r\n\r\n    context.addMovie(newMovie);\r\n\r\n    this.setState({\r\n      movieTitle: '',\r\n      selectedPlanets: [],\r\n    });\r\n  };\r\n\r\n  getOptions = async () => {\r\n    const { searchQuery } = this.state;\r\n    const searchResults = await searchPlanets(searchQuery);\r\n\r\n    this.setState({\r\n      searchResults: searchResults,\r\n    });\r\n  };\r\n\r\n  removeTag = (planetNameToRemove) => {\r\n    this.setState((state) => {\r\n      const filteredPlanets = state.selectedPlanets.filter((planet) => {\r\n        return planet.name !== planetNameToRemove;\r\n      });\r\n\r\n      return {\r\n        selectedPlanets: filteredPlanets,\r\n        planetsValidated: validatePlanets(filteredPlanets),\r\n      };\r\n    });\r\n  };\r\n\r\n  render () {\r\n    const { selectedPlanets, movieTitle, planetValidated, titleValidated } = this.state;\r\n    const { handleTitleChange, handleSubmit, handlePlanetAdd } = this;\r\n\r\n    const planetTags = selectedPlanets.map((planet) => <PlanetTag key={planet.name} remove={() => this.removeTag(planet.name)}>{planet.name}</PlanetTag>)\r\n\r\n    return (\r\n      <ExpandableTab title={\"Add Movie\"}>\r\n        <form className={styles.formWrapper}>\r\n          <label className={styles.formLabel}>Movie title:\r\n            <input name=\"title\"\r\n              className={styles.input}\r\n              type=\"text\"\r\n              placeholder=\"Enter the movie title\"\r\n              value={movieTitle}\r\n              onChange={handleTitleChange} />\r\n          </label>\r\n          { !titleValidated &&\r\n            <p className={styles.validateInfo}>The title must start with a capital letter and be at least 3 letters long.</p>\r\n          }\r\n          { planetTags &&\r\n            <div className={styles.planetTags}>\r\n              {planetTags}\r\n            </div>\r\n          }\r\n\r\n          <label className={styles.formLabel}>Add planet:\r\n            <SelectSearch\r\n              onChange={handlePlanetAdd}\r\n              options={[]}\r\n              getOptions={(query) => {\r\n                return new Promise((resolve, reject) => {\r\n                  searchPlanets(query)\r\n                    .then((data) => {\r\n                      resolve(data.results.map((planet) => ({ value: planet.url, name: planet.name })))\r\n                    })\r\n                });\r\n              }}\r\n              value={[]}\r\n              search\r\n              placeholder=\"Search for the the planet in database\"\r\n              printOptions=\"always\"\r\n            />\r\n          </label>\r\n          { !planetValidated &&\r\n            <p className={styles.validateInfo}>Add at least one planet.</p>\r\n          }\r\n          <MoviesContext.Consumer>\r\n            {(context) =>\r\n              <button className={styles.button}\r\n                type=\"button\"\r\n                disabled={!(titleValidated && planetValidated)}\r\n                onClick={() => handleSubmit(context)}\r\n              >Add Movie\r\n              </button>\r\n            }\r\n          </MoviesContext.Consumer>\r\n        </form>\r\n      </ExpandableTab>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AddMovie;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/UI/Header/Header.js';\r\nimport MoviesList from './components/MoviesList/MoviesList.js';\r\nimport AddMovie from './components/AddMovie/AddMovie.js';\r\nimport MoviesContext from './context/MoviesContext.js';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  addMovie = (movie) => {\r\n    this.setState((state) => {\r\n      const updatedMovies = [...state.movies, movie];\r\n\r\n      localStorage.setItem('userSavedMovies', JSON.stringify(updatedMovies));\r\n      return {\r\n        movies: updatedMovies\r\n      };\r\n    });\r\n  };\r\n\r\n  getMoviesFromLocalStorage = () => {\r\n    const localStorageObject = localStorage.getItem('userSavedMovies');\r\n    const userSavedMovies = JSON.parse(localStorageObject);\r\n\r\n    if (userSavedMovies) {\r\n      this.setState({\r\n        movies: userSavedMovies\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMoviesFromLocalStorage();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"app\">\r\n        <MoviesContext.Provider value={{\r\n          movies: this.state.movies,\r\n          addMovie: this.addMovie,\r\n        }}>\r\n          <div className=\"app-wrapper top\">\r\n            <Header />\r\n            <MoviesList />\r\n          </div>\r\n          <div className=\"app-wrapper bottom\">\r\n            <AddMovie />\r\n          </div>\r\n        </MoviesContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}